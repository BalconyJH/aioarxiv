[project]
name = "aioarxiv"
version = "0.1.2"
description = "arxiv Parse library"
authors = [
    { name = "BalconyJH", email = "balconyjh@gmail.com" },
]
dependencies = [
    "feedparser~=6.0",
    "loguru~=0.7",
    "pydantic>=2.9.2",
    "aiohttp>=3.10.10",
    "tenacity>=9.0.0",
    "aiofiles>=24.1.0",
    "platformdirs>=4.3.6",
    "tzdata>=2024.2",
]
requires-python = ">=3.9"
readme = "README.md"
license = { text = "MIT" }

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--cov-report=term-missing --ignore=.venv/"
asyncio_default_fixture_loop_scope = "session"

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "W",     # pycodestyle warnings
    "E",     # pycodestyle errors
    "I",     # isort
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "C4",    # flake8-comprehensions
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "TID",   # flake8-tidy-imports
    "RUF",   # Ruff-specific rules
    "DTZ",   # flake8-datetimez
    "SIM",   # flake8-simplify
    "ISC",   # flake8-implicit-str-concat
]
ignore = [
    "E402",   # module-import-not-at-top-of-file
    "UP037",  # quoted-annotation
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
    "ISC001"  # single-line-implicit-string-concatenation
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["aioarxiv", "tests/*"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"
executionEnvironments = [
    { root = "./tests", extraPaths = [
        "./",
    ] },
    { root = "./" },
]
typeCheckingMode = "standard"
disableBytesTypePromotions = true

[tool.pdm]
distribution = true

[dependency-groups]
test = [
    "pytest-cov~=5.0",
    "pytest-xdist~=3.6",
    "pytest-asyncio~=0.23",
    "pytest-mock>=3.14.0",
]
dev = [
    "ruff>=0.8",
    "pre-commit~=4.0",
    "bump-my-version>=0.28.1",
    "mkdocs-material>=9.5.49",
]

[tool.coverage.run]
omit = [
    ".venv/*",
]