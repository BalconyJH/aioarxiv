name: Setup Python
description: Setup Python with PDM

inputs:
  python-version:
    description: Python version to use
    required: false
    default: "3.9"
  env-dir:
    description: Environment directory
    required: false
    default: "."
  no-root:
    description: Do not install package in the environment
    required: false
    default: "false"
  allow-python-prereleases:
    description: Allow installing python prereleases
    required: false
    default: "false"
  with-groups:
    description: Comma-separated list of dependency groups to include (e.g., "dev,test")
    required: false
    default: ""
  without-groups:
    description: Comma-separated list of dependency groups to exclude
    required: false
    default: ""
  dev:
    description: Select dev dependencies
    required: false
    default: "false"
  production:
    description: Unselect dev dependencies
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Setup PDM
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: ${{ inputs.python-version }}
        allow-python-prereleases: ${{ inputs.allow-python-prereleases }}
        cache: true

    - name: Install dependencies
      shell: bash
      run: |
        cd ${{ inputs.env-dir }}
        
        install_cmd="pdm install -g"
        
        if [ ! -z "${{ inputs.with-groups }}" ]; then
          IFS=',' read -ra groups <<< "${{ inputs.with-groups }}"
          for group in "${groups[@]}"; do
            install_cmd="$install_cmd -G $group"
          done
        fi
        
        if [ ! -z "${{ inputs.without-groups }}" ]; then
          install_cmd="$install_cmd --without ${{ inputs.without-groups }}"
        fi
        
        if [ "${{ inputs.dev }}" = "true" ]; then
          install_cmd="$install_cmd -d"
        fi
        
        if [ "${{ inputs.production }}" = "true" ]; then
          install_cmd="$install_cmd --prod"
        fi
        
        if [ "${{ inputs.no-root }}" = "true" ]; then
          install_cmd="$install_cmd --no-self"
        fi
        
        echo "Running: $install_cmd"
        eval $install_cmd